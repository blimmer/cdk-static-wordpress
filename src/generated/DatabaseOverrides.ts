// ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".
import type { aws_ec2, aws_kms, aws_rds, Duration, RemovalPolicy } from 'aws-cdk-lib';

/**
 * DatabaseOverrides
 */
export interface DatabaseOverrides {
  /**
   * Where to place the instances within the VPC.
   * If provided, the `vpc` property must also be specified.
   * @default - the VPC default strategy if not specified.
   * @stability stable
   */
  readonly vpcSubnets?: aws_ec2.SubnetSelection;
  /**
   * The VPC that this Aurora Serverless cluster has been created in.
   * @default - the default VPC in the account and region will be used
   * @stability stable
   */
  readonly vpc?: aws_ec2.IVpc;
  /**
   * Existing subnet group for the cluster.
   * @default - a new subnet group is created if `vpc` was provided.
If the `vpc` property was not provided, no subnet group will be associated with the DB cluster
   * @stability stable
   */
  readonly subnetGroup?: aws_rds.ISubnetGroup;
  /**
   * The KMS key for storage encryption.
   * @default - the default master key will be used for storage encryption
   * @stability stable
   */
  readonly storageEncryptionKey?: aws_kms.IKey;
  /**
   * Security group.
   * @default - a new security group is created if `vpc` was provided.
If the `vpc` property was not provided, no VPC security groups will be associated with the DB cluster.
   * @stability stable
   */
  readonly securityGroups?: Array<aws_ec2.ISecurityGroup>;
  /**
   * Scaling configuration of an Aurora Serverless database cluster.
   * @default - Serverless cluster is automatically paused after 5 minutes of being idle.
minimum capacity: 2 ACU
maximum capacity: 16 ACU
   * @stability stable
   */
  readonly scaling?: aws_rds.ServerlessScalingOptions;
  /**
   * The removal policy to apply when the cluster and its instances are removed from the stack or replaced during an update.
   * @default - RemovalPolicy.SNAPSHOT (remove the cluster and instances, but retain a snapshot of the data)
   * @stability stable
   */
  readonly removalPolicy?: RemovalPolicy;
  /**
   * Additional parameters to pass to the database engine.
   * @default - no parameter group.
   * @stability stable
   */
  readonly parameterGroup?: aws_rds.IParameterGroup;
  /**
   * Whether to enable the Data API.
   * @default false
   * @stability stable
   */
  readonly enableDataApi?: boolean;
  /**
   * Indicates whether the DB cluster should have deletion protection enabled.
   * @default - true if removalPolicy is RETAIN, false otherwise
   * @stability stable
   */
  readonly deletionProtection?: boolean;
  /**
   * Name of a database which is automatically created inside the cluster.
   * @default - Database is not created in cluster.
   * @stability stable
   */
  readonly defaultDatabaseName?: string;
  /**
   * Credentials for the administrative user.
   * @default - A username of 'admin' and SecretsManager-generated password
   * @stability stable
   */
  readonly credentials?: aws_rds.Credentials;
  /**
   * Whether to copy tags to the snapshot when a snapshot is created.
   * @default - true
   * @stability stable
   */
  readonly copyTagsToSnapshot?: boolean;
  /**
   * An optional identifier for the cluster.
   * @default - A name is automatically generated.
   * @stability stable
   */
  readonly clusterIdentifier?: string;
  /**
   * The number of days during which automatic DB snapshots are retained.
   * Automatic backup retention cannot be disabled on serverless clusters.
   * Must be a value from 1 day to 35 days.
   * @default Duration.days(1)
   * @stability stable
   */
  readonly backupRetention?: Duration;
  /**
   * What kind of database to start.
   * @stability stable
   */
  readonly engine?: aws_rds.IClusterEngine;
}
